###
# Module 3: Index Management - Advanced Schema Design (REST API)
# =============================================================
# 
# This example demonstrates advanced schema design patterns and best practices for
# Azure AI Search indexes using REST API calls. You'll learn about complex fields,
# collections, and optimization strategies for different use cases.
# 
# Learning Objectives:
# - Design complex field structures using JSON
# - Use complex fields for nested objects
# - Optimize field attributes for performance
# - Handle different data types effectively
# - Implement schema design patterns via REST API
# 
# Prerequisites:
# - Completed 01_create_basic_index.http
# - Understanding of basic field types
# - Azure AI Search service with admin access
# - HTTP client with REST API support
# 
# Author: Azure AI Search Handbook
# Module: Beginner - Module 3: Index Management
###

# Variables (configure these for your environment)
@endpoint = {{$dotenv AZURE_SEARCH_SERVICE_ENDPOINT}}
@adminKey = {{$dotenv AZURE_SEARCH_ADMIN_KEY}}
@apiVersion = 2023-11-01

### 1. E-commerce Product Schema
# Create a comprehensive e-commerce product index with complex fields
POST {{endpoint}}/indexes?api-version={{apiVersion}}
Content-Type: application/json
api-key: {{adminKey}}

{
  "name": "ecommerce-products-rest",
  "fields": [
    {
      "name": "productId",
      "type": "Edm.String",
      "key": true,
      "searchable": false,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "name",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true,
      "analyzer": "en.microsoft"
    },
    {
      "name": "description",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true,
      "analyzer": "en.microsoft"
    },
    {
      "name": "category",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "brand",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "sku",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "tags",
      "type": "Collection(Edm.String)",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "features",
      "type": "Collection(Edm.String)",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "inStock",
      "type": "Edm.Boolean",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "stockQuantity",
      "type": "Edm.Int32",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "createdDate",
      "type": "Edm.DateTimeOffset",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "dimensions",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "length",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "width",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "height",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "weight",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "unit",
          "type": "Edm.String",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    },
    {
      "name": "pricing",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "basePrice",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "salePrice",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "currency",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "discountPercentage",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    },
    {
      "name": "manufacturer",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "name",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": true,
          "retrievable": true
        },
        {
          "name": "country",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": true,
          "retrievable": true
        },
        {
          "name": "website",
          "type": "Edm.String",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    },
    {
      "name": "reviews",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "averageRating",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": true,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "totalReviews",
          "type": "Edm.Int32",
          "searchable": false,
          "filterable": false,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "fiveStarCount",
          "type": "Edm.Int32",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    }
  ]
}

### 2. Verify E-commerce Index Creation
GET {{endpoint}}/indexes/ecommerce-products-rest?api-version={{apiVersion}}
api-key: {{adminKey}}

### 3. Test E-commerce Index with Sample Product
POST {{endpoint}}/indexes/ecommerce-products-rest/docs/index?api-version={{apiVersion}}
Content-Type: application/json
api-key: {{adminKey}}

{
  "value": [
    {
      "@search.action": "upload",
      "productId": "prod-001",
      "name": "Premium Wireless Headphones",
      "description": "High-quality wireless headphones with noise cancellation and premium sound quality.",
      "category": "Electronics",
      "brand": "AudioTech",
      "sku": "AT-WH-001",
      "tags": ["wireless", "headphones", "premium", "noise-cancellation"],
      "features": ["Bluetooth 5.0", "30-hour battery", "Quick charge", "Noise cancellation"],
      "inStock": true,
      "stockQuantity": 150,
      "createdDate": "2024-02-10T10:00:00Z",
      "dimensions": {
        "length": 20.5,
        "width": 18.0,
        "height": 8.5,
        "weight": 0.25,
        "unit": "cm/kg"
      },
      "pricing": {
        "basePrice": 299.99,
        "salePrice": 249.99,
        "currency": "USD",
        "discountPercentage": 16.67
      },
      "manufacturer": {
        "name": "AudioTech Industries",
        "country": "Germany",
        "website": "https://audiotech.example.com"
      },
      "reviews": {
        "averageRating": 4.6,
        "totalReviews": 1247,
        "fiveStarCount": 892
      }
    }
  ]
}

### 4. Document Management Schema
# Create a comprehensive document management index
POST {{endpoint}}/indexes?api-version={{apiVersion}}
Content-Type: application/json
api-key: {{adminKey}}

{
  "name": "document-management-rest",
  "fields": [
    {
      "name": "documentId",
      "type": "Edm.String",
      "key": true,
      "searchable": false,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "title",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true,
      "analyzer": "en.microsoft"
    },
    {
      "name": "content",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true,
      "analyzer": "en.microsoft"
    },
    {
      "name": "documentType",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "category",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "fileName",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "createdDate",
      "type": "Edm.DateTimeOffset",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "lastModified",
      "type": "Edm.DateTimeOffset",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "language",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "keywords",
      "type": "Collection(Edm.String)",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "tags",
      "type": "Collection(Edm.String)",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "isArchived",
      "type": "Edm.Boolean",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "author",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "name",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "email",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "department",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": true,
          "retrievable": true
        }
      ]
    },
    {
      "name": "metadata",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "fileSize",
          "type": "Edm.Int64",
          "searchable": false,
          "filterable": true,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "fileType",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": true,
          "retrievable": true
        },
        {
          "name": "pageCount",
          "type": "Edm.Int32",
          "searchable": false,
          "filterable": true,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "wordCount",
          "type": "Edm.Int32",
          "searchable": false,
          "filterable": true,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        }
      ]
    },
    {
      "name": "security",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "classificationLevel",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": true,
          "retrievable": true
        },
        {
          "name": "isConfidential",
          "type": "Edm.Boolean",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "accessLevel",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    }
  ]
}

### 5. Test Document Management Index
POST {{endpoint}}/indexes/document-management-rest/docs/index?api-version={{apiVersion}}
Content-Type: application/json
api-key: {{adminKey}}

{
  "value": [
    {
      "@search.action": "upload",
      "documentId": "doc-001",
      "title": "Azure AI Search Architecture Guide",
      "content": "Comprehensive guide to Azure AI Search architecture, covering service tiers, scaling, and deployment patterns for enterprise applications.",
      "documentType": "Technical Guide",
      "category": "Architecture",
      "fileName": "azure-search-architecture.pdf",
      "createdDate": "2024-01-10T08:00:00Z",
      "lastModified": "2024-02-05T16:30:00Z",
      "language": "en",
      "keywords": ["architecture", "azure", "search", "enterprise"],
      "tags": ["guide", "technical", "architecture"],
      "isArchived": false,
      "author": {
        "name": "Sarah Wilson",
        "email": "sarah.wilson@company.com",
        "department": "Engineering"
      },
      "metadata": {
        "fileSize": 2048576,
        "fileType": "PDF",
        "pageCount": 45,
        "wordCount": 12500
      },
      "security": {
        "classificationLevel": "Internal",
        "isConfidential": false,
        "accessLevel": "All Employees"
      }
    }
  ]
}

### 6. Optimized Blog Schema
# Create a performance-optimized blog index
POST {{endpoint}}/indexes?api-version={{apiVersion}}
Content-Type: application/json
api-key: {{adminKey}}

{
  "name": "optimized-blog-rest",
  "fields": [
    {
      "name": "postId",
      "type": "Edm.String",
      "key": true,
      "searchable": false,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "title",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true,
      "analyzer": "en.microsoft"
    },
    {
      "name": "content",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": false,
      "analyzer": "en.microsoft"
    },
    {
      "name": "excerpt",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "authorName",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "primaryCategory",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "tags",
      "type": "Collection(Edm.String)",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "publishedDate",
      "type": "Edm.DateTimeOffset",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "isPublished",
      "type": "Edm.Boolean",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "readingTimeMinutes",
      "type": "Edm.Int32",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "popularityScore",
      "type": "Edm.Double",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    }
  ]
}

### 7. Test Optimized Blog Index
POST {{endpoint}}/indexes/optimized-blog-rest/docs/index?api-version={{apiVersion}}
Content-Type: application/json
api-key: {{adminKey}}

{
  "value": [
    {
      "@search.action": "upload",
      "postId": "blog-001",
      "title": "Advanced Azure AI Search Techniques",
      "content": "This comprehensive blog post covers advanced techniques for implementing Azure AI Search in production environments. Topics include performance optimization, custom analyzers, and advanced query patterns.",
      "excerpt": "Learn advanced techniques for implementing Azure AI Search in production environments with performance optimization tips.",
      "authorName": "Alex Chen",
      "primaryCategory": "Technology",
      "tags": ["azure", "search", "advanced", "performance"],
      "publishedDate": "2024-02-08T14:00:00Z",
      "isPublished": true,
      "readingTimeMinutes": 12,
      "popularityScore": 8.7
    }
  ]
}

### 8. Compare Schema Complexity
# Get statistics for all created indexes
GET {{endpoint}}/indexes/ecommerce-products-rest/stats?api-version={{apiVersion}}
api-key: {{adminKey}}

###
GET {{endpoint}}/indexes/document-management-rest/stats?api-version={{apiVersion}}
api-key: {{adminKey}}

###
GET {{endpoint}}/indexes/optimized-blog-rest/stats?api-version={{apiVersion}}
api-key: {{adminKey}}

### 9. Test Complex Field Queries
# Query the e-commerce index using complex field filters
GET {{endpoint}}/indexes/ecommerce-products-rest/docs?api-version={{apiVersion}}&search=*&$filter=pricing/basePrice gt 200 and manufacturer/country eq 'Germany'&$select=name,pricing,manufacturer
api-key: {{adminKey}}

### 10. Test Document Management Queries
# Query documents by author department and file type
GET {{endpoint}}/indexes/document-management-rest/docs?api-version={{apiVersion}}&search=architecture&$filter=author/department eq 'Engineering' and metadata/fileType eq 'PDF'&$select=title,author,metadata
api-key: {{adminKey}}

### 11. Test Performance-Optimized Queries
# Query the optimized blog index with sorting and filtering
GET {{endpoint}}/indexes/optimized-blog-rest/docs?api-version={{apiVersion}}&search=azure&$filter=isPublished eq true and readingTimeMinutes le 15&$orderby=popularityScore desc&$select=title,authorName,readingTimeMinutes,popularityScore
api-key: {{adminKey}}

### 12. Schema Evolution Example
# Add a new field to the e-commerce index
PUT {{endpoint}}/indexes/ecommerce-products-rest?api-version={{apiVersion}}
Content-Type: application/json
api-key: {{adminKey}}

{
  "name": "ecommerce-products-rest",
  "fields": [
    {
      "name": "productId",
      "type": "Edm.String",
      "key": true,
      "searchable": false,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "name",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true,
      "analyzer": "en.microsoft"
    },
    {
      "name": "description",
      "type": "Edm.String",
      "searchable": true,
      "filterable": false,
      "sortable": false,
      "facetable": false,
      "retrievable": true,
      "analyzer": "en.microsoft"
    },
    {
      "name": "category",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "brand",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "sku",
      "type": "Edm.String",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "tags",
      "type": "Collection(Edm.String)",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "features",
      "type": "Collection(Edm.String)",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": true,
      "retrievable": true
    },
    {
      "name": "inStock",
      "type": "Edm.Boolean",
      "searchable": false,
      "filterable": true,
      "sortable": false,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "stockQuantity",
      "type": "Edm.Int32",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "createdDate",
      "type": "Edm.DateTimeOffset",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "lastUpdated",
      "type": "Edm.DateTimeOffset",
      "searchable": false,
      "filterable": true,
      "sortable": true,
      "facetable": false,
      "retrievable": true
    },
    {
      "name": "dimensions",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "length",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "width",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "height",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "weight",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "unit",
          "type": "Edm.String",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    },
    {
      "name": "pricing",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "basePrice",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "salePrice",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "currency",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "discountPercentage",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    },
    {
      "name": "manufacturer",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "name",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": true,
          "retrievable": true
        },
        {
          "name": "country",
          "type": "Edm.String",
          "searchable": false,
          "filterable": true,
          "sortable": false,
          "facetable": true,
          "retrievable": true
        },
        {
          "name": "website",
          "type": "Edm.String",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    },
    {
      "name": "reviews",
      "type": "Edm.ComplexType",
      "fields": [
        {
          "name": "averageRating",
          "type": "Edm.Double",
          "searchable": false,
          "filterable": true,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "totalReviews",
          "type": "Edm.Int32",
          "searchable": false,
          "filterable": false,
          "sortable": true,
          "facetable": false,
          "retrievable": true
        },
        {
          "name": "fiveStarCount",
          "type": "Edm.Int32",
          "searchable": false,
          "filterable": false,
          "sortable": false,
          "facetable": false,
          "retrievable": true
        }
      ]
    }
  ]
}

### 13. Test Updated Schema
# Upload a product with the new lastUpdated field
POST {{endpoint}}/indexes/ecommerce-products-rest/docs/index?api-version={{apiVersion}}
Content-Type: application/json
api-key: {{adminKey}}

{
  "value": [
    {
      "@search.action": "merge",
      "productId": "prod-001",
      "lastUpdated": "2024-02-10T15:30:00Z"
    }
  ]
}

### 14. Verify Schema Update
GET {{endpoint}}/indexes/ecommerce-products-rest/docs/prod-001?api-version={{apiVersion}}
api-key: {{adminKey}}

### 15. Optional: Clean Up Test Indexes
# Uncomment these to delete the test indexes
# DELETE {{endpoint}}/indexes/ecommerce-products-rest?api-version={{apiVersion}}
# api-key: {{adminKey}}

###
# DELETE {{endpoint}}/indexes/document-management-rest?api-version={{apiVersion}}
# api-key: {{adminKey}}

###
# DELETE {{endpoint}}/indexes/optimized-blog-rest?api-version={{apiVersion}}
# api-key: {{adminKey}}

###
# 📚 What you learned:
# ✅ How to design complex field structures using JSON
# ✅ How to use complex fields for nested objects
# ✅ How to optimize field attributes for performance
# ✅ How to handle different data types effectively
# ✅ How to implement schema design patterns via REST API
# ✅ How to evolve schemas safely with additive changes
# ✅ How to query complex fields with OData syntax
#
# 🚀 Next steps:
# 1. Try creating your own schema for your use case
# 2. Experiment with different field attribute combinations
# 3. Run the next example: 03_data_ingestion.http
# 4. Test performance with different schema designs
# 5. Explore custom analyzers and scoring profiles
###